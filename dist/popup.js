(()=>{"use strict";var e,t,n,o,a={975:(e,t,n)=>{n.a(e,(async(e,t)=>{try{let n=[],o=document.querySelector("table");async function a(){n=[]}async function l(){chrome.storage.sync.set({data:[]})}async function s(){console.log("set default"),n.push(["Click here!","Some Assignements","0001-01-01"]),await chrome.storage.sync.set({data:n})}async function r(){await a(),console.log("running fetchData"),chrome.storage.sync.get(["data"]).catch((e=>{console.log("the reason we couldnt find data is "+e.type),l()})),await chrome.storage.sync.get("data").then((async e=>{console.log("result[data]: "+e.data),null==e.data&&(console.log("first time creating data!"),await s()),""==e.data&&(console.log("chrome's data is empty"),await i()),console.log("result[data] is "+typeof e.data),null==e.data&&(console.log("some error here idk why"),await l(),await i());for(let t=0;t<e.data.length;t++){let o=[];if(console.log("we are in for loop and result[data][i].length is "+typeof e.data[t].length),0!=e.data[t].length){for(let n=0;n<e.data[t].length;n++)console.log("i: "+t+" j: "+n),console.log("result[data][i][j] is "+e.data[t][n]),o.push(e.data[t][n]);for(let e=0;e<o.length;e++)console.log("row "+e+" data is "+o[e]);n.push(o),await f(n)}}})),console.log("local data after setLocal"),f(n)}async function c(e){if(console.log("we are removing index "+e),e!=n.length-1){for(let t=e+1;t<n.length;t++)n[t-1]=n[t];n.pop(),f(n)}else n.pop()}async function i(){console.log("setting local data from HTML"),a();let e=document.querySelector("table");console.log("table is "+typeof e);const t=e.rows.length;console.log("rowLength is "+t);for(let a=1;a<t;a++){let t=e.rows.item(a).cells;console.log("cells is "+t);let l=t.length;console.log("cellLength is "+l);let s=[];for(var o=0;o<l-1;o++){let e=t.item(o).getElementsByTagName("input");if(null!=e[0]){const t=e[0];s.push(t.value)}}n.push(s)}await chrome.storage.sync.set({data:n})}async function d(){var e;console.log("creating HTML from Data");let t=document.createElement("table");t.classList.add("styled-table");let a=t.createTHead().insertRow(0),l=a.insertCell(0),s=a.insertCell(1),r=a.insertCell(2),g=a.insertCell(3);l.innerHTML="<b>Subject</b>",s.innerHTML="<b>Assignment</b>",r.innerHTML="<b>Due</b>",g.innerHTML="<b>Done</b>";for(let e=0;e<n.length;e++){let o=t.insertRow(e+1),a=o.insertCell(0),l=o.insertCell(1),s=o.insertCell(2),r=o.insertCell(3);a.innerHTML=`<input type="text" value="${n[e][0]}">`,console.log("cell1 = "+a.innerHTML),l.innerHTML=`<input type="text" value="${n[e][1]}">`,console.log("cell2 = "+l.innerHTML),s.innerHTML=`<input type="date" value="${n[e][2]}">`,console.log("cell3 = "+s.innerHTML),r.innerHTML="<button>Done</button>",a.addEventListener("change",(e=>{i()})),l.addEventListener("change",(e=>{i()})),s.addEventListener("change",(e=>{i()})),r.addEventListener("click",(()=>{console.log("buton clicked! "+e),c(e),d()}))}null===(e=o.parentNode)||void 0===e||e.replaceChild(t,o),o=t}async function g(){console.log("we are in the function addListeners");let e=document.querySelector("table"),t=e.rows.length;for(let n=0;n<t;n++){let t=e.rows.item(n).cells,o=t.length;for(let e=0;e<o-1;e++){console.log("looping!");let n=t.item(e).getElementsByTagName("input");if(null!=n[0]){const e=n[0];console.log("we are adding listener to "+e.name),e.addEventListener("change",(e=>{console.log("input changed!"),i()}))}}let a=t.item(o-1).getElementsByTagName("button");if(null!=a[0]){const e=a[0];console.log("adding event listener to button"),e.addEventListener("click",(()=>{console.log("buton clicked! "+n),c(n),d()}))}}}async function u(e,t){let o=t.rows.length;for(let e=0;e<o;e++){let o=t.rows.item(e).cells,l=new Array(0),s=o.length;for(var a=0;a<s-1;a++){let e=o.item(a).getElementsByTagName("input");if(null!=e[0]){const t=e[0];console.log("we are in AddTableRows and "),console.log(`we are adding ${t.value} to data ${n}`),l.push(t.value)}}n.push(l),await chrome.storage.sync.set({data:n}),await d(),await g()}}chrome.runtime.onInstalled.addListener((e=>{console.log("we have just installed this for the first time!!!")})),chrome.runtime.onStartup.addListener((()=>{console.log("we have just started up this")})),await chrome.storage.sync.get("data").then((async e=>{console.log("result[data]: "+e.data),null==e.data&&(console.log("first time creating data!"),await s())})),await r(),await g(),await d();const h=document.querySelector("#addingTable");async function f(e){console.log("data.length: "+e.length);for(let t=0;t<e.length;t++){console.log("data[i].length is "+e[t].length);for(let n=0;n<e[t].length;n++)console.log(`data[${t}][${n}] is ${e[t][n]}`)}}document.querySelector("#add").addEventListener("click",(e=>{u(0,h)})),t()}catch(m){t(m)}}),1)}},l={};function s(e){var t=l[e];if(void 0!==t)return t.exports;var n=l[e]={exports:{}};return a[e](n,n.exports,s),n.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",o=e=>{e&&!e.d&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},s.a=(a,l,s)=>{var r;s&&((r=[]).d=1);var c,i,d,g=new Set,u=a.exports,h=new Promise(((e,t)=>{d=t,i=e}));h[t]=u,h[e]=e=>(r&&e(r),g.forEach(e),h.catch((e=>{}))),a.exports=h,l((a=>{var l;c=(a=>a.map((a=>{if(null!==a&&"object"==typeof a){if(a[e])return a;if(a.then){var l=[];l.d=0,a.then((e=>{s[t]=e,o(l)}),(e=>{s[n]=e,o(l)}));var s={};return s[e]=e=>e(l),s}}var r={};return r[e]=e=>{},r[t]=a,r})))(a);var s=()=>c.map((e=>{if(e[n])throw e[n];return e[t]})),i=new Promise((t=>{(l=()=>t(s)).r=0;var n=e=>e!==r&&!g.has(e)&&(g.add(e),e&&!e.d&&(l.r++,e.push(l)));c.map((t=>t[e](n)))}));return l.r?i:s()}),(e=>(e?d(h[n]=e):i(u),o(r)))),r&&(r.d=0)},s(975)})();