(()=>{"use strict";var e={136:(e,t)=>{function a(){t.data=new Array(0)}Object.defineProperty(t,"__esModule",{value:!0}),t.updateData=t.clearData=t.data=void 0,t.data=[],t.clearData=a,t.updateData=function(e){a(),console.log("we need to update data");const o=e.rows.length;for(let a=0;a<o;a++){let o=e.rows.item(a).cells,l=new Array(0),r=o.length;for(var n=0;n<r-1;n++){let e=o.item(n),a=e.getElementsByTagName("input");if(null!=a[0]){e.cellIndex.toString();const o=a[0];console.log(`we are adding ${o.value} to data ${t.data}`),l.push(o.value)}}t.data.push(l)}!function(e){for(let t=0;t<e.length;t++)for(let a=0;a<e[t].length;a++)console.log(e[t][a])}(t.data),chrome.storage.sync.set({data:t.data}),chrome.storage.sync.get(["data"]).then((e=>{console.log(`Value is currently ${e.data}`)}))},chrome.storage.onChanged.addListener(((e,t)=>{for(let[a,{oldValue:o,newValue:n}]of Object.entries(e))console.log(`Storage key "${a}" in namespace "${t}" changed.`,`Old value was "${o}", new value is "${n}".`)}))}},t={};function a(o){var n=t[o];if(void 0!==n)return n.exports;var l=t[o]={exports:{}};return e[o](l,l.exports,a),l.exports}(()=>{const e=document.querySelector("table");let t=e.rows.length;const o=a(136);chrome.storage.sync.get("data").then((e=>{""==e.data?console.log("data is empty"):console.log("data is not empty")})),function(){for(let n=0;n<t;n++){let t=e.rows.item(n).cells,l=t.length;for(var a=0;a<l-1;a++){let n=t.item(a),l=n.getElementsByTagName("input");null!=l[0]&&(n.cellIndex.toString(),l[0].addEventListener("change",(t=>{(0,o.updateData)(e)})))}}}(),console.log("data is "+o.data)})()})();